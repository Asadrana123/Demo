What Are HTTP Methods?
HTTP methods are verbs that tell the server what kind of action the client (like your browser or frontend app) wants to perform on a resource (like a file, user, or product).

Think of them like CRUD operations:

Create → POST

Read → GET

Update → PUT / PATCH

Delete → DELETE

🔍 The Main HTTP Methods (with Real-World Examples)
1. 🔹 GET – Fetch Data
📦 It requests data from the server.

🚫 Doesn’t change anything (read-only).

📂 Data is sent in URL, not in body.


GET /users/42 HTTP/1.1
Host: example.com
Used for: loading pages, fetching user data, loading images, etc.

🧪 Safe? ✅ Yes
🧪 Idempotent? ✅ Yes (same request, same result)

2. 🔸 POST – Create Something New
🛠 Sends data to the server to create a resource.

🧾 Data is sent in the request body, not in URL.

POST /users HTTP/1.1
Host: example.com
Content-Type: application/json

{
  "name": "Asad",
  "role": "developer"
}
Used for: form submissions, login, signups, uploading files

🧪 Safe? ❌ No
🧪 Idempotent? ❌ No (2 calls = 2 records)

3. 🔧 PUT – Update Entire Resource
🎯 Replaces the entire resource with new data.


PUT /users/42 HTTP/1.1
Content-Type: application/json

{
  "name": "Asad Lukman",
  "role": "frontend engineer"
}
Used for: full profile update, replacing configurations

🧪 Safe? ❌ No
🧪 Idempotent? ✅ Yes (same update = same result)

4. 🛠 PATCH – Update Partially
🔍 Used to partially update a resource.


PATCH /users/42 HTTP/1.1
Content-Type: application/json

{
  "role": "senior developer"
}
Used for: updating one field (e.g., only email), changing settings

🧪 Safe? ❌ No
🧪 Idempotent? ✅ Mostly (depends on server)

5. ❌ DELETE – Remove a Resource
❌ Deletes a resource on the server.


DELETE /users/42 HTTP/1.1
Used for: deleting user, post, comment, etc.

🧪 Safe? ❌ No
🧪 Idempotent? ✅ Yes (once deleted = always gone)

⚠️ Bonus Methods (Less Common)
6. 🔍 HEAD
Same as GET, but no response body.

Used to check if resource exists or get metadata.

7. 🧪 OPTIONS
Asks server: “What can I do with this resource?”

