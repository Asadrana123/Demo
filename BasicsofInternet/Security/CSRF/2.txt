✅ 1. Use SameSite Cookies
Modern browsers support this flag:

Set-Cookie: sessionId=abc123; SameSite=Strict

✅ 2. Use CSRF Tokens
A random token is generated by the server and stored in a form or header. The server checks for this token on every write request.

Flow:
Server renders page/form with a hidden token:

<input type="hidden" name="csrf_token" value="abcXYZ123" />
When form is submitted or API is called, token is sent along

Server validates:
Is the token valid and matches the session?

✅ Allow request

❌ Block request


The frontend doesn’t permanently store CSRF tokens. It either:
Uses it immediately (in forms or headers), or
Stores it briefly in JavaScript memory for fetch calls.
The token is not saved in cookies, because that defeats its purpose.
Its goal is to prove that the request came from your app, not from a third-party site.


✅ 3. Use Double Submit Cookie Pattern
Set token in a cookie

Client reads cookie and sends token in custom header

Server checks if:

Cookie token === Header token
