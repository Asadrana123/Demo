Step 2 â€” Passing data into Grid cells with itemData

You donâ€™t want just Row X, Col Y â€” usually you have real data (like products, images, or a table).
We pass that data using the itemData prop.

import { FixedSizeGrid as Grid } from "react-window";

function Cell({ rowIndex, columnIndex, style, data }) {
  // Flatten 2D index â†’ 1D index
  const index = rowIndex * data.columnCount + columnIndex;
  const item = data.items[index];

  return (
    <div style={style}>
      {item}
    </div>
  );
}

export default function DataGrid() {
  const items = Array.from({ length: 50 }, (_, i) => `Item ${i + 1}`);
  const columnCount = 5;
  const rowCount = Math.ceil(items.length / columnCount);

  return (
    <Grid
      columnCount={columnCount}
      rowCount={rowCount}
      columnWidth={100}
      rowHeight={35}
      height={300}
      width={400}
      itemData={{ items, columnCount }}  // âœ… pass data here
    >
      {Cell}
    </Grid>
  );
}


ðŸ”‘ Key points:
itemData can hold anything (arrays, objects, callbacks).
Inside Cell, you get it via the data prop.
We map rowIndex + columnIndex â†’ flat index to pick the right item.