========================================
COMBINING REDUCERS
========================================

WHY COMBINE REDUCERS?
- Split large state into smaller, manageable pieces
- Each reducer handles its own slice of state
- Better organization and maintainability
- Easier testing and debugging

MANUAL COMBINATION:
function rootReducer(state = {}, action) {
  return {
    counter: counterReducer(state.counter, action),
    todos: todosReducer(state.todos, action),
    auth: authReducer(state.auth, action)
  };
}

USING combineReducers:
import { combineReducers } from 'redux';

const rootReducer = combineReducers({
  counter: counterReducer,
  todos: todosReducer,
  auth: authReducer,
  cart: cartReducer
});

// This creates state structure:
// {
//   counter: { count: 0 },
//   todos: { todos: [], filter: 'ALL' },
//   auth: { user: null, isAuthenticated: false },
//   cart: { items: [], totalAmount: 0 }
// }

