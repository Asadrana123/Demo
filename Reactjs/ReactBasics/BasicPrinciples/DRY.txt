The DRY principle in React (and in programming in general) stands for:

Don’t Repeat Yourself
— meaning: avoid duplicating code or logic by reusing it instead.
Why DRY Matters in React
React apps grow quickly, and repeating the same logic or UI in multiple places causes:
Harder maintenance → if something changes, you must update it in several places.
Higher chance of bugs → you might forget to update a copy.
Bloated codebase → unnecessary lines of code.

2. Extract Reusable Logic into Hooks
When you have logic repeated in multiple components, make a custom hook.

// utils/useFetch.js
import { useState, useEffect } from "react";

export function useFetch(url) {
  const [data, setData] = useState(null);
  useEffect(() => {
    fetch(url).then(res => res.json()).then(setData);
  }, [url]);
  return data;
}

// In components:
const users = useFetch("/api/users");
const products = useFetch("/api/products");
