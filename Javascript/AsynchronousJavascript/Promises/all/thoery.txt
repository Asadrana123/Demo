//Promise.all()
//Waits for all promises to resolve. If any of them rejects, the entire Promise.all is rejected.
// if all promises get resolved then it returns an array of resolved promises otherwise
//  it will returned reject promise
// This does not start the promises â€” because the promises are already running by the time you pass them 


 Non-promise values (numbers, strings, booleans, null, undefined, plain objects) are treated as 
 already-fulfilled values, so Promise.all includes them unchanged in the results and still resolves 
 asynchronously.