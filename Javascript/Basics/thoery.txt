The == operator is a loose equality operator, which performs type coercion.
when we use==, which means JavaScript tries to convert the values to the same type.
The === operator is a strict equality operator, which does not perform type coercion.

Things cant be converted to number:-
'abc'	
'123abc'	
'12.34.56'	
'1 2', '10 20' 
'Infinity' 
undefined	
{}	
{ a: 1 }	
function() {}	
[1, 2, 3]	
['5', '10']	
Symbol('id')	
NaN

Falsy values in Boolean
'' 
0	
null	
undefined	
NaN	
false	

Throw:-
throw in JavaScript is used to create an error manually.
It immediately stops the normal flow of code.
It jumps to the nearest .catch() block (for Promises) or try...catch block (for normal code).
It rejects the current Promise (if used inside a Promise).
If no catch block found, ðŸš¨ the program crashes â€” and the error goes to the browser console 
(or Node.js console).

If you use throw inside a .then() or a .catch(),
it immediately returns a rejected Promise.